<svg fill="none" viewBox="0 0 800 400" width="100%" height="min-content" xmlns="http://www.w3.org/2000/svg">
  <foreignObject width="100%" height="100%">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <style>
        :root {
          /* ---------- CHANGE THIS COLOR TO CREATE A DYNAMIC THEME USING CSS color-mix ---------- */
          --theme-primary: hsl(222, 100%, 75%);
          /* BASIC COLORS */
          --theme-on-primary: hsl(0, 0%, 0%);
          --theme-white: hsl(0, 0%, 100%);
          --theme-black: hsl(0, 0%, 0%);
        
          /* CHECK IF BROWSER SUPPORT COLOR-MIX */
          @supports (color: color-mix(in srgb, red, blue)) {
            /* SURFACE COLORS */
            --theme-surface-a90: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 10%
            );
            --theme-surface-a80: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 20%
            );
            --theme-surface-a70: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 30%
            );
            --theme-surface-a60: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 40%
            );
            --theme-surface-a50: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 50%
            );
            --theme-surface-a40: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 60%
            );
            --theme-surface-a30: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 70%
            );
            --theme-surface-a20: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 80%
            );
            --theme-surface-a10: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-white) 90%
            );
          }
        
          /* FONTS */
          --theme-headline-font: "Plus Jakarta Sans", sans-serif;
          --theme-button-font: "Plus Jakarta Sans", sans-serif;
          --theme-gutter-x: 1.5rem;
          --theme-gutter-y: 0;
        }
        
        * {
          box-sizing: border-box;
        }
        
        /* SURFACES */
        body {
          background: var(--theme-surface-a20);
          height: 100vh;
        
          /* DARK MODE STYLES */
          &:has(.btn-check:is(:checked)) {
            /* BRAND COLORS */
            --theme-primary: hsl(222, 38%, 53%);
            /* BASIC COLORS */
            --theme-on-primary: hsl(0, 0%, 100%);
            /* CHECK IF BROWSER SUPPORT COLOR-MIX */
            @supports (color: color-mix(in srgb, red, blue)) {
              /* SURFACE COLORS */
              --theme-surface-a90: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 10%
              );
              --theme-surface-a80: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 20%
              );
              --theme-surface-a70: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 30%
              );
              --theme-surface-a60: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 40%
              );
              --theme-surface-a50: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 50%
              );
              --theme-surface-a40: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 60%
              );
              --theme-surface-a30: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 70%
              );
              --theme-surface-a20: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 80%
              );
              --theme-surface-a10: color-mix(
                in srgb,
                var(--theme-primary),
                var(--theme-black) 90%
              );
            }
          }
        }
        
        /* CONTAINER */
        .container {
          max-width: 1320px;
          margin-top: 2.5rem;
          margin-left: auto;
          margin-right: auto;
          padding-left: calc(var(--theme-gutter-x) * 0.5);
          padding-right: calc(var(--theme-gutter-x) * 0.5);
          border-radius: 25px;
          margin-bottom: 2rem;
        
          &:has(.card) {
            background: var(--theme-surface-a30);
          }
        
          &:has(input) {
            padding-left: 0;
            padding-right: 0;
        
            > .row {
              > * {
                padding-left: 0;
                padding-right: 0;
              }
            }
          }
        
          > .row {
            display: flex;
            flex-wrap: wrap;
        
            > * {
              flex-shrink: 0;
              width: 100%;
              max-width: 100%;
              padding-right: calc(var(--theme-gutter-x) * 0.5);
              padding-left: calc(var(--theme-gutter-x) * 0.5);
            }
        
            > .col {
              flex-basis: 1;
              width: 100%;
            }
        
            > .col-4 {
              flex: 0 0 auto;
              width: 33.33%;
            }
          }
        }
        
        /* CARD */
        .card {
          width: 100%;
          min-height: 12rem;
          border-radius: 12px;
          background: var(--theme-surface-a40);
          font-family: var(--theme-headline-font);
          margin: 1rem 0;
          padding: 1.5rem;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: flex-start;
          color: color-mix(in srgb, var(--theme-primary), var(--theme-on-primary));
          transition: background 300ms, border-radius 300ms;
        
          &:is(:hover) {
            background: var(--theme-surface-a50);
            border-radius: 50px;
        
            > .button {
              background-color: var(--theme-surface-a90);
            }
          }
        
          > h2 {
            margin-bottom: 0.2rem;
          }
        
          & :nth-child(1 of p) {
            font-weight: 600;
          }
        }
        
        /* BUTTON */
        .button {
          width: fit-content;
          height: fit-content;
          padding: 0.75rem 1.5rem;
          font-weight: 700;
          font-size: 14px;
          font-family: var(--theme-button-font);
          letter-spacing: 1.25px;
          background-color: var(--theme-surface-a70);
          color: color-mix(in srgb, var(--theme-primary), var(--theme-on-primary) 60%);
          border-radius: 25px;
          border-style: none;
          cursor: pointer;
          transition: background 300ms;
        
          &:is(:hover) {
            background-color: var(--theme-surface-a80);
          }
          &:is(:active, :focus) {
            background-color: var(--theme-surface-a90);
          }
        }
        
        /* TYPOGRAPHY */
        :is(h1, h2, p) {
          margin-top: 0;
          margin-bottom: 0.75rem;
          line-height: 1.2;
        }
        
        h1 {
          font-family: var(--theme-headline-font);
          font-weight: 800;
          font-size: 2.5rem;
          margin: 1.25rem 0;
          color: color-mix(in srgb, var(--theme-primary), var(--theme-on-primary) 70%);
        }
        
        h2 {
          font-weight: 800;
          font-size: 1.75rem;
        }
        
        p {
          line-height: 1.75;
          font-size: 1.15rem;
          color: color-mix(in oklab, var(--theme-on-primary), var(--theme-muted));
          font-variation-settings: var(--theme-font-variation-body);
        
          &:is(.overline) {
            color: var(--theme-primary);
            text-transform: uppercase;
            margin-bottom: 0;
            font-size: 1rem;
            font-weight: 800;
          }
        }
        
        /* INPUT */
        .input-search {
          background-color: var(--theme-surface-a40);
          border-radius: 50px;
          width: 100%;
          min-height: 4rem;
          border: none;
          padding: 0 1rem;
          font-size: 16px;
          font-family: var(--theme-button-font);
          transition: background 300ms;
        
          &:is(:hover) {
            background-color: var(--theme-surface-a50);
          }
        
          &::placeholder {
            color: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-on-primary) 60%
            );
          }
        }
        
        .theme-wrapper {
          position: fixed;
          bottom: 1rem;
          left: 1rem;
          background-color: var(--theme-surface-a80);
          border-radius: 25px;
          padding: 1rem;
        
          > label {
            font-family: var(--theme-button-font);
            color: color-mix(
              in srgb,
              var(--theme-primary),
              var(--theme-on-primary) 60%
            );
          }
        
          > input {
            display: none;
            visibility: hidden;
          }
        }

      </style>

      <div class="container">
        <div class="row">
          <div class="col">
            <input type="search" class="input-search" placeholder="Search a surface color">
          </div>
        </div>
      </div>
      <div class="container">
        <div class="row">
          <div class="col">
            <h1>Color Surfaces</h1>
          </div>
        </div>
        <div class="row">
          <div class="col-4">
            <div class="card surface-a90">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a80">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a70">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a60">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a50">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a40">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a30">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a20">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
          <div class="col-4">
            <div class="card surface-a10">
              <h2>Card Surface</h2>
              <p>CSS color-mix()</p>
              <p>The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount.</p>
              <button class="button">Generate</button>
            </div>
          </div>
        </div>
      </div>
      
      <div class="theme-wrapper">
        <input id="theme-checkbox" type="checkbox" class="btn-check">
        <label for="theme-checkbox">Toggle dark mode</label>
      </div>

    </div>
  </foreignObject>
</svg>
